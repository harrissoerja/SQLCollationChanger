<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelNote1.Text" xml:space="preserve">
    <value>NOTE: If you change from a case insensitive to a case sensitive collation order you may find errors occur when recreating functions and check constraints - this is because your SQL code will be parsed in a case sensitive manner.</value>
  </data>
  <metadata name="cancelTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>134, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>48</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAACAgAAABAAgAqAgAAB4DAAAgIAAAAQAgAKgQAADGCwAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAiI
        AAAAAAAAAAAAAAAAAAD/iIAAAAAAAAAAAAAAAAAA+PiHAAAAAAAAAAAAAAAAAI+PiIAAAAAAAAAAAAAA
        AAAI+PiIAAAAAAAAAAAAAAAAAI/4iIAAAAAAAAAAAAAAAAAI/4iIAAAAAAAAAAAAAAAAAI/4iIAAAAAA
        AAAAAAAAAAAI//iIAAAAAAAAAAAAAHkAAIj4iIAAAAAAAAAAAACZAAAI/4iIAAAAAAAAAHl5OYAAAI/4
        iIAAAAAAAACbmZOZMAAI//iHAAAAAAAACXm5OZAAAI+PiIAAAAAAAACTmZgAAAAI+PiIAAAAAAAImXmw
        AAAAAP+PhnAAAAAACTm5kAAAAAAI+IjnAAAAAAgACJAAAAAAAI+IdnAAAAAAAAAAAJgIkAAIiIjnAAAA
        AAAAAAC5mbAAAIiIjAAAAAAAAAAIk5sAAAAIiIgAAAAAAAAAiZuXkAAAgIiAAAAAAAAAALmJm5gAAJgA
        AAAAAAAAAAAAibAAAIm5gAAAAAAAAAAAAAuAAAAImwAAAAAAAAAAAAAAAAAAC4kAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////j////wf///8D////Af///4D////Af///4D////Af///4D///PAf//z4D//Af
        Af/wB4D/+AfAf/wP4D/4H/Af+B/4D/uf/Af//J4D//wfA//4P4P/8B9H//APP//8fB///n4////+P///
        ////////////////////////KAAAACAAAABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAA
        AACkej4AqoNMAK+KVQCxjFYAtZZpAA424QAQOeIAFDvhABE75AASPeUAE0DmAB9D4gAcROUAE0PoABRF
        6QAWSOsAF0vsABtJ6AAYTu4AGlLwAB1Z9AAgRuQAKk/mACBO6QAjUuwAP1/nADFb6gAgX/cAJWL3ACJl
        +wAyZPEAMmj1AEFf5gBBY+oAR2boAEtp6QBSb+kAWHjtAE118ABNePMAQnf4AEWA/QBLgfsAWoX2AF+S
        /QBggvEAZYbxAGmI8QBqkfcAbJP3AHSU9AB6lfIAepv2AHOb+gB+p/0AsaOUALKnnAC0qZ4AzK2DAMW8
        sgDawJ0A28GgAN3FpQDhy6kA49C0AIGk+gCMr/wA187GANjOwgDXz8gA2NHJAO7cwQDv3sQA7t/IAOLc
        1wDp490A7+rlAPLs5QDy7egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEc8OQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABPTEc8OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1PTEc8OQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARk1PTEc8OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk1PTEc8OQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk1PTEc8OgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk1P
        TEc8OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk1PTEc8OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAARk1PTEc8OQAAAAAAAAAAAAAAAAAAAAAAAAAAIQwAAAAARk1PTEc8OgAAAAAAAAAAAAAAAAAAAAAA
        AAAGBgAAAAAARk1PTEc8OgAAAAAAAAAAAAAAAAAAIxoaCAYGJQAAAAAAR01PTEc8OQAAAAAAAAAAAAAA
        AAAkCAcHCAcHCAwAAAAARk1PTEc8OQAAAAAAAAAAAAAAAAAXCAcHCAcHEgAAAAAARk1PTEc8OQAAAAAA
        AAAAAAAAAAAICwsLCyMAAAAAAAAARk1PTEc8OAAAAAAAAAAAAAAAJg4LCwsLAAAAAAAAAAAAS01PTEUF
        AQAAAAAAAAAAAAASDhIbDg4AAAAAAAAAAAAARk1OQTsEAQAAAAAAAAAAADAAAAA0DgAAAAAAAAAAAAAA
        RkpKQDsEAgAAAAAAAAAAAAAAAAAAAAAAEC4ALhkAAAAAPUhIQDsEAwAAAAAAAAAAAAAAAAAAAAAQEBIS
        KAAAAAAAPUhKQDsEAAAAAAAAAAAAAAAAAAAAMxMUExMAAAAAAAAAPUhKQDsAAAAAAAAAAAAAAAAAACgU
        FBQUFB8AAAAAADUAP0hIAAAAAAAAAAAAAAAAAAAAMSAVFRUVFSwAAAAAFTEAAAAAAAAAAAAAAAAAAAAA
        AAAAAEIcHQAAAAAANhwcHSkAAAAAAAAAAAAAAAAAAAAAAAAAAB5DAAAAAAAAKx4eAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAqNy0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//////+P////B////wP///8B////gP///8B////gP///8B////gP//88B///PgP/8B8B//AH
        gP/4B8B//A/gP/gf8B/4H/gP+5/8B//8ngP//B8D//g/g//wH0f/8A8///x8H//+fj////4/////////
        //////////////////8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZ0sr/xbyy/7KnnP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8u3o/+nj3f/Z0sr/xbyy/7Kn
        nP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv6uX/8u3o/+nj
        3f/Z0sr/xbyy/7KnnP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANfP
        x//v6uX/8u3o/+nj3f/Z0sr/xbyy/7KnnP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANfPx//v6uX/8u3o/+nj3f/Z0sr/xbyy/7KnnP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANfPx//v6uX/8u3o/+nj3f/Z0sr/xbyy/7KnnPgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANfPx//v6uX/8u3o/+nj3f/Z0sr/xbyy/7Kn
        nP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANfPx/7v6uX/8u3o/+nj
        3f/Z0sr/xbyy/7KnnP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////j////wf///8D////Af///4D////Af///4D////Af//84D//+HAf//h4D/+AP
        Af/gA4D/8APAf/gH4D/4D/Af8A/4D/AJ/Af/yA4D//gfA//wH4P/4A8H/+AMD//8DA///Hwf//5+H///
        /v//////////////////////
</value>
  </data>
</root>